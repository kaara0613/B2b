予選
不正行為が疑われる場合は、採点・評価は即時終了します。報告する場合は、「不正行為」フラグを選択してください。冷静に、慎重に、思慮深く使用するよう注意してください。
予備テスト
以下の点を確認してください。
	•	防御にアクセスするための条件は満たされています: 評価対象者が出席し、提出物が空ではなく、実際に評価対象者のものであることなど...
	•	このプロジェクトでは、評価対象者のコンピューターに Git リポジトリのクローンを作成する必要があります。


一般的な手順
一般的なガイドライン
	•	弁論中、論点を確認するために助けが必要になったらすぐに、評価対象者が支援しなければなりません。
	•	クローンされたリポジトリのルートに「signature.txt」ファイルが存在することを確認します。
	•	「signature.txt」に含まれる署名が、評価対象の仮想マシンの「.vdi」ファイルの署名と一致していることを確認します。
	簡単な diff で 2 つの署名を比較できます。必要に応じて、評価対象者に「.vdi」ファイルの場所を尋ねます。
	•	予防策として、元の仮想マシンを複製してコピーを保持しておくこともできます。
	•	評価する仮想マシンを起動します。
	•	何かが期待どおりに動作しない場合、または 2 つの署名が異なる場合は、評価はここで停止します。


必須部分
このプロジェクトでは、厳格なルールに従って仮想マシンを作成し、構成する必要があります。評価対象者は、審査中にあなたを支援する必要があります。以下のすべての点が遵守されていることを確認してください。
プロジェクト概要
	•	評価対象者は、次のことを簡単に説明する必要があります。

	•	仮想マシンの基本的な機能
		>>物理的なcpの上に仮想的なcpを作成できる。
	•	オペレーティングシステムの選択
	•	RockyとDebianの基本的な違い
		>>ディストリビュージョン、パッケージ管理システム(debianはaptとか)
			rockyはより安定的で保守的。サポート期間が長い。
	•	仮想マシンの利点
		>>リソースの有効活用、隔離された環境、柔軟なテスト・開発、移行の容易さ
	•	選択したオペレーティング システムが Rocky の場合、SELinux と DNF とは何かを説明する必要があります。
	•	選択したオペレーティングシステムが Debian の場合、aptitude と apt の違い、APPArmor とは何かを説明する必要があります。
		>>より古く高度な依存関係の解決ロジックをもつ、対話型インターフェース
	防御中は、スクリプトが 10 分ごとに情報を表示する必要があります。
	その動作は後で詳細にチェックされます。説明が明確でない場合は、評価はここで終了します。

シンプルな構成
注意: ポイントを確認するためにサポートが必要な場合は、評価対象者がすぐにサポートできる必要があります。
	•	起動時にマシンにグラフィカル環境がないことを確認します。このマシンへの接続を試行する前にパスワードが要求されます。
		非ルート ユーザーでログインします。選択したパスワードがサブジェクトで課されたルールに準拠していることを確認します。
		次に、評価者の助けを借りて、次のことを確認します。
	•	選択されたオペレーティングシステムは確かにDebianまたはRockyです
	•	UFWサービスが正常に起動されました
	>>systemctl status ufw
	•	SSH サービスは適切に起動されます。何かが期待どおりに動作しない、または明確に説明されていない場合は、評価はここで停止します。
	>>systemctl status ssh

ユーザー
注意: ポイントを確認するためにサポートが必要な場合は、評価対象者がすぐにサポートできる必要があります。
この件では、評価対象者のログイン名を持つユーザーが仮想マシン上に存在する必要があります。
このユーザーが追加されており、そのユーザーが「sudo」および「user42」グループに属していることを確認します。
以下の手順に従って、パスワード ポリシーに関してサブジェクトに課せられたルールが実装されていることを確認します。
まず、新しいユーザーを作成します。サブジェクトのルールを尊重しながら、任意のパスワードを割り当てます。
評価対象者は、要求されたルールを仮想マシンでどのように実装できたかを説明する必要があります。
通常は、1 つまたは 2 つのファイルが変更されます。
問題がある場合は、評価はここで停止します。
	•	新しいユーザーができたので、評価対象者に「評価中」という名前のグループを作成してこのユーザーに割り当てるように依頼します。
	>>sudo adduser
	>>sudo groupadd <ユーザー名>
	>>sudo usermod -aG <グループ名> <ユーザー名>
		最後に、このユーザーが実際に「評価中」グループに属していることを確認します。
	>>groups <ユーザー名>
	>>groupdel <グループ名>
	•	最後に、評価対象者にこのパスワード ポリシーの目的と、実装のメリットとデメリットを説明してもらいます。
		もちろん、対象者がそれを要求しているからという答えはカウントされません。
		期待どおりに機能しなかったり、明確に説明されていない場合は、評価はそこで終了します。

ホスト名とパーティション
注意: ポイントを確認するためにサポートが必要な場合は、評価対象者がすぐにサポートできる必要があります。
	•	マシンのホスト名が次のようにフォーマットされていることを確認します: login42 (評価対象者のログイン)。
	•	ログインを自分のものに置き換えてこのホスト名を変更し、マシンを再起動します。
		再起動してもホスト名が更新されていない場合は、評価はここで停止します。
	•	これで、マシンの元のホスト名を復元できます。
	•	評価対象者に仮想マシンのパーティションを表示する方法を尋ねます。
	>>lsblk
	•	出力を件名に示されている例と比較します。
	注意: 評価対象者がボーナスを完了している場合は、ボーナス部分の例を参照する必要があります。
この部分はパーティションについて話し合う機会です。評価対象者は、LVM の仕組みとその利点について簡単に説明する必要があります。

期待どおりに動作しない、または明確に説明されていない場合は、評価はここで終了します。

sudo
注意: ポイントを確認するためにサポートが必要な場合は、評価対象者がすぐにサポートできる必要があります。
	•	「sudo」プログラムが仮想マシンに実際にインストールされていることを確認します。
	•	評価対象者は、新しいユーザーを「sudo」グループに割り当てる方法を示す必要があります。
	>>sudo usermod -aG <グループ名> <ユーザー名>
	•	被験者は sudo に対して厳格なルールを課します。
	評価対象者は、まず、選択した例を使用して sudo の目的と操作を説明する必要があります。
	>>常時 root での作業を避けることで、誤操作やセキュリティリスクを大幅に低減できる。
		ログを記録する仕組みがあるため、運用の透明性も高まる
	次に、被験者が課したルールの実装をデモンストレーションする必要があります。
	•	「/var/log/sudo/」ディレクトリが存在し、少なくとも 1 つのファイルが含まれていることを確認します。
	このディレクトリ内のファイルの内容を確認します。sudo で使用されたコマンドの履歴が表示されます。
	最後に、sudo 経由でコマンドを実行してみます。
	「/var/log/sudo/」ディレクトリ内のファイルが更新されているかどうかを確認します。
	期待どおりに動作しない、または明確に説明されていない場合は、評価はここで停止します。

UFW / ファイアウォール
注意: ポイントを確認するためにサポートが必要な場合は、評価対象者がすぐにサポートできる必要があります。
	•	「UFW」(または rocky の場合は「Firewalld」) プログラムが仮想マシンにインストールされていることを確認します。
	•	正しく機能していることを確認します。
	•	評価対象者は、UFW (または「Firewalld」) とは何か、そしてそれを使用することがなぜ重要なのかについて基本的な説明をする必要があります。
	•	UFW (または「Firewalld」) のアクティブなルールを一覧表示します。ポート 4242 のルールがあるはずです。
	•	ポート 8080 を開くための新しいルールを追加します。アクティブなルールを一覧表示して、ルールが追加されたことを確認します。
	>>sudo vim /etc/ssh/sshd_config
	>>sudo ufw allow 4242/tcp
	>>sudo ufw enable
	•	最後に、評価対象者の協力を得て、この新しいルールを削除します。
	何かが期待どおりに機能しなかったり、明確に説明されていない場合は、評価はここで終了します。

パスワード
注意: ポイントを確認するためにサポートが必要な場合は、評価対象者がすぐにサポートできる必要があります。
	•	SSH サービスが仮想マシンに実際にインストールされていることを確認します。
	•	正しく機能していることを確認します。
	•	評価対象者は、SSH とは何か、なぜそれを使用することが重要なのかについて基本的な説明を行う必要があります。
	•	SSH サービスがポート 4242 のみを使用していることを確認します。
	>>ufw status numbers
	>>sudo ufw delete allow 80/tcp
	•	評価対象者は、作成された新しいユーザーで SSH を使用して接続するのを手伝う必要があります。
	評価対象者に応じて、キーまたは単純なパスワードを使用できます。
	もちろん、件名に示されているように、SSH が「root」ユーザーで使用できないことを確認する必要があります。
	期待どおりに動作しない、または明確に説明されていない場合は、評価はここで終了します。

スクリプト監視
注意: ポイントを確認するためにサポートが必要な場合は、評価対象者がすぐにサポートできる必要があります。
評価対象者は、次のことを簡単に説明する必要があります。
	•	コードを表示してスクリプトの操作
	•	「cron」とは何か
	>>cronとはジョブを自動実行するためのデーモンプロセス。
	>>定期的に実行されるジョブは、crond というデーモンによって、自動的に行なうように管理することができる。
	•	スクリプトをサーバー起動から 10 分ごとに実行するように設定する方法。
	スクリプトの適切な機能が確認されたら、評価対象者はこのスクリプトが 1 分ごとに実行されることを確認する必要があります。
	動的な値でスクリプトが正しく実行されることを確認するために、任意のスクリプトを起動できます。
	最後に、評価対象者はスクリプト自体を変更せずに、サーバー起動時にスクリプトが実行されないようにする必要があります。
	この点を確認するには、サーバーを最後にもう一度再起動する必要があります。
	>>Linux起動時に最初に起動されるプロセス（PID1）として動作するデーモンのような存在。
	>>systemd は「initシステム」であり、systemctl で制御できるサービス管理の核。
	>>そして大きく見れば「デーモン類をまとめて管理・起動する親玉」として動作している
	起動時に、スクリプトが同じ場所に存在し、権限が変更されておらず、変更されていないことを確認する必要があります。
	上記の点のいずれかが正しくない場合、評価はここで停止します。
